[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pmlib"
version = "1.0.0"
authors = [
    { name="Michael Dzjaparidze" },
]
description = "A physical modelling library for building resonator networks"
readme = "README.md"
requires-python = ">=3.6"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy~=1.26.0",
    "scipy~=1.11.4",
]

[project.urls]
Homepage = "https://github.com/michaeldzjap/py-pmlib"
Issues = "https://github.com/michaeldzjap/py-pmlib/issues"

[tool.hatch.envs.default]
path = ".hatch"

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pylint>=3.0.2",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.envs.test.scripts]
run = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=pmlib tests/"
run-dev = "test --no-cov"
coverage-report = "coverage report -m"
coverage-html = "coverage html"

[tool.hatch.envs.plot]
dependencies = [
    "matplotlib"
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = "scipy.sparse"
ignore_missing_imports = true
